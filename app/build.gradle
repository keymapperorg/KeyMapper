apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "com.google.devtools.ksp"
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: "kotlinx-serialization"
apply plugin: "org.jetbrains.kotlin.plugin.parcelize"
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: "androidx.room"

android {

    namespace 'io.github.sds100.keymapper'
    compileSdk 35
    buildToolsVersion = '35.0.0'

    def versionProperties = new Properties()
    file("version.properties").withInputStream { versionProperties.load(it) }

    defaultConfig {
        applicationId "io.github.sds100.keymapper"
        minSdkVersion 21
        targetSdkVersion 35
        versionCode versionProperties.getProperty("VERSION_CODE").toInteger()
        versionName versionProperties.getProperty("VERSION_NAME")
        multiDexEnabled true

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        release {
            storeFile file("keystore.jks")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias "keymapper"
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    buildTypes {

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }

        debug_release {
            // Extend from debug build type so compose Live Edit and rapid building works
            initWith debug

            // Do not alter the package name so can test revenuecat and billing while developing.
            applicationIdSuffix ""

            /*
            This is required because the splitties library does not have a debug_release build type.
             */
            matchingFallbacks = ["debug"]
        }

        ci {
            minifyEnabled true
            shrinkResources true

            /*
            This is required because the splitties library does not have a ci build type.
             */
            matchingFallbacks = ["debug"]

            applicationIdSuffix ".ci"
            versionNameSuffix "-ci." + versionProperties.getProperty("VERSION_NUM")

            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"

            signingConfig signingConfigs.debug
        }
    }

    flavorDimensions = ["pro"]
    productFlavors {
        free {
            dimension "pro"
        }
        pro {
            dimension "pro"

            File file = rootProject.file("local.properties")

            if (file.exists()) {
                def localProperties = new Properties()
                localProperties.load(new FileInputStream(file))
                buildConfigField("String", "REVENUECAT_API_KEY", localProperties["REVENUECAT_API_KEY"])
            }
        }
    }

    buildFeatures {
        dataBinding true
        viewBinding true
        aidl true
        buildConfig true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    kapt {
        correctErrorTypes = true
    }

    sourceSets {
        androidTest {
            assets.srcDirs += files("$projectDir/schemas".toString())
            resources.srcDirs += ["src/test/resources"]
        }

        test {
            java.srcDirs += ["src/pro/test/java"]
        }
    }

    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            outputFileName = "keymapper-${variant.versionName}.apk"
        }
    }

    room {
        schemaDirectory "$projectDir/schemas"
    }
}

dependencies {
    def room_version = "2.6.1"
    def coroutinesVersion = "1.9.0"
    def nav_version = '2.8.9'
    def work_version = "2.10.0"
    def epoxy_version = "4.6.2"
    def splitties_version = "3.0.0"
    def multidex_version = "2.0.1"
    def shizuku_version = "13.1.5"

    // kotlin stuff
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3"

    // random stuff
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'com.github.salomonbrys.kotson:kotson:2.5.0'
    implementation "com.airbnb.android:epoxy:$epoxy_version"
    implementation 'com.github.AppIntro:AppIntro:6.1.0'
    implementation "com.airbnb.android:epoxy-databinding:$epoxy_version"
    kapt "com.airbnb.android:epoxy-processor:$epoxy_version"
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'uk.co.samuelwall:material-tap-target-prompt:3.1.0'
    implementation 'net.lingala.zip4j:zip4j:2.8.0'
    implementation "com.anggrayudi:storage:0.8.1"
    implementation 'com.github.MFlisar:DragSelectRecyclerView:0.3'
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    implementation "dev.rikka.shizuku:api:$shizuku_version"
    implementation "dev.rikka.shizuku:provider:$shizuku_version"
    implementation 'org.lsposed.hiddenapibypass:hiddenapibypass:4.3'
    
    // splitties
    implementation "com.louiscad.splitties:splitties-bitflags:$splitties_version"
    implementation "com.louiscad.splitties:splitties-alertdialog-appcompat-coroutines:$splitties_version"
    implementation("com.louiscad.splitties:splitties-alertdialog-material:$splitties_version")
    implementation "com.louiscad.splitties:splitties-snackbar:$splitties_version"
    implementation "com.louiscad.splitties:splitties-toast:$splitties_version"
    implementation "com.louiscad.splitties:splitties-mainthread:$splitties_version"

    // androidx
    implementation 'androidx.legacy:legacy-support-core-ui:1.0.0'
    implementation 'androidx.core:core-ktx:1.15.0'

    implementation 'androidx.fragment:fragment-ktx:1.8.6'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.7'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.8.7'
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.multidex:multidex:$multidex_version"
    implementation "androidx.browser:browser:1.8.0"
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.recyclerview:recyclerview:1.4.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.viewpager2:viewpager2:1.1.0"
    implementation "androidx.datastore:datastore-preferences:1.1.4"
    implementation "androidx.core:core-splashscreen:1.0.1"
    ksp "androidx.room:room-compiler:$room_version"

//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.6'

    def junitVersion = "4.13.2"
    def androidXTestExtKotlinRunnerVersion = "1.2.1"
    def espressoVersion = "3.6.1"
    def androidXTestCoreVersion = "1.6.1"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:core-ktx:1.6.1"
    testImplementation "org.robolectric:robolectric:4.12.1"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "pl.pragmatists:JUnitParams:1.1.1"
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    testImplementation "org.mockito:mockito-core:5.2.0"
    testImplementation "org.mockito:mockito-inline:5.2.0"

    androidTestImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    androidTestImplementation "android.arch.persistence.room:testing:1.1.1"
    androidTestImplementation "org.mockito:mockito-android:4.6.1"
    debugImplementation "androidx.fragment:fragment-testing:1.8.6"
    implementation "androidx.test:core:$androidXTestCoreVersion"
}